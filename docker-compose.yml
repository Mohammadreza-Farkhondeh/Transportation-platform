version: "3.8"

services:
  user-service:
    build:
      context: ./backend/users
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgres://username:password@postgres/dbname
    depends_on:
      - postgres
    networks:
      - transportation-net

  interaction-service:
    build:
      context: ./backend/interactions
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgres://username:password@postgres/dbname
    depends_on:
      - postgres
    networks:
      - transportation-net
  
  location-service:
    build:
      context: ./backend/locations
    ports:
      - "8080:8080"
    environment:
      MONGO_URL: mongodb://mongodb:27017/locationdb
      KAFKA_BROKER: kafka:9092
    depends_on:
      - mongodb
      - kafka
    networks:
      - transportation-net

  notification-service:
    build:
      context: ./backend/notifications
    ports:
      - "3000:3000"
    environment:
      REDIS_URL: redis://redis:6379
    depends_on:
      - redis
    networks:
      - transportation-net

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: dbname
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - transportation-net

  mongodb:
    image: mongo:6
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - transportation-net

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - "9092:9092"
    networks:
      - transportation-net

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - transportation-net

networks:
  transportation-net:

volumes:
  postgres_data:
  mongodb_data:
  redis_data:
